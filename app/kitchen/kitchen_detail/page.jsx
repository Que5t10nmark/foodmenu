"use client";
import { useEffect, useState } from "react";

export default function FinishedOrdersPage() {
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchFinishedOrders = () => {
      fetch("/api/purchase?status=‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
        .then((res) => res.json())
        .then((data) => {
          setOrders(data);
          setLoading(false);
        })
        .catch((err) => {
          console.error("‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", err);
          setLoading(false);
        });
    };

    fetchFinishedOrders(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å

    const interval = setInterval(fetchFinishedOrders, 2000); // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ó‡∏∏‡∏Å 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    return () => clearInterval(interval); // ‡∏•‡πâ‡∏≤‡∏á interval ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡∏ñ‡∏π‡∏Å unmount
  }, []);

  if (loading) return <div className="p-6 text-center">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>;

  // ‡πÅ‡∏ö‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡πÇ‡∏ï‡πä‡∏∞
  const groupedOrders = orders.reduce((acc, order) => {
    if (!acc[order.seat_id]) acc[order.seat_id] = [];
    acc[order.seat_id].push(order);
    return acc;
  }, {});

  return (
    <div className="p-6 max-w-6xl mx-auto">
      <h1 className="text-2xl font-bold mb-6">üì¶ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</h1>

      {Object.keys(groupedOrders).length === 0 ? (
        <div className="text-center text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</div>
      ) : (
        Object.keys(groupedOrders).map((seatId) => (
          <div key={seatId} className="mb-6">
            <div className="font-bold text-xl mb-4">‡πÇ‡∏ï‡πä‡∏∞: {seatId}</div>

            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
              {groupedOrders[seatId].map((order) => (
                <div
                  key={order.purchase_id}
                  className="border rounded-xl shadow p-4 bg-white"
                >
                  <div className="font-bold text-lg">{order.product_name}</div>
                  <div className="text-sm text-gray-600 mb-1">
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {order.purchase_quantity}
                  </div>
                  <div className="text-sm text-gray-600 mb-1">
                    ‡∏£‡∏≤‡∏Ñ‡∏≤: ‡∏ø{order.product_price * order.purchase_quantity}
                  </div>
                  <ul className="text-sm mb-2">
                    {order.purchase_size && <li>‡∏Ç‡∏ô‡∏≤‡∏î: {order.purchase_size}</li>}
                    {order.purchase_spiceLevel && (
                      <li>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ú‡πá‡∏î: {order.purchase_spiceLevel}</li>
                    )}
                    {order.purchase_toppings && order.purchase_toppings !== "[]" && (
                      <li>
                        ‡∏ó‡πá‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á:{" "}
                        {Array.isArray(order.purchase_toppings)
                          ? order.purchase_toppings.join(", ")
                          : JSON.parse(order.purchase_toppings).join(", ")}
                      </li>
                    )}
                    {order.purchase_description && (
                      <li>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: {order.purchase_description}</li>
                    )}
                  </ul>
                  <div className="text-sm">
                    ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á:{" "}
                    {new Date(order.purchase_date).toLocaleString("th-TH", {
                      timeZone: "Asia/Bangkok",
                    })}
                  </div>
                  <div className="text-sm font-semibold text-green-600">
                    ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {order.purchase_status}
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))
      )}
    </div>
  );
}
