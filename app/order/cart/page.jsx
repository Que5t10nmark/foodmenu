"use client";
import { useCart } from "../store/cartContext";
import { useRouter } from "next/navigation";
import Link from "next/link";

export default function CartPage() {
  const { cart, addToCart, removeFromCart, clearCart } = useCart();
  const router = useRouter();

  const total = cart.reduce(
    (sum, item) => sum + item.quantity * item.product_price,
    0
  );

  const handleConfirm = async () => {
    const seatId = prompt("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞"); // ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≤‡∏Å QR

    if (!seatId) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠");
      return;
    }

    try {
      // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• cart ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà API ‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á
      const cartData = cart.map((item) => ({
        product: {
          product_id: item.product_id,
          product_name: item.product_name,
          product_price: item.product_price,
          quantity: item.quantity,
        },
        seat_id: seatId,
        size: item.purchase_size || "‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤",
        spiceLevel: item.purchase_spiceLevel || "‡πÑ‡∏°‡πà‡πÄ‡∏ú‡πá‡∏î",
        toppings: item.purchase_toppings || [],
        description: item.purchase_description || "",
      }));

      const res = await fetch("/api/purchase", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          cart: cartData,  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà API ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
          seatId,
        }),
      });

      if (res.ok) {
        alert("‚úÖ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
        clearCart();
        router.push("/order/product");
      } else {
        alert("‚ùå ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      }
    } catch (err) {
      console.error(err);
      alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    }
  };

  return (
    <div className="p-6 max-w-2xl mx-auto">
      <h1 className="text-2xl font-bold mb-6">üßæ ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h1>
      {cart.length === 0 ? (
        <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</p>
      ) : (
        <>
          <ul className="space-y-4">
            {cart.map((item) => (
              <li
                key={item.product_id + item.purchase_description}
                className="border p-3 rounded"
              >
                <div className="flex justify-between items-center">
                  <div>
                    <div className="font-semibold">
                      {item.product_name} √ó {item.quantity}
                    </div>
                    <div className="text-sm text-gray-600">
                      ‡∏Ç‡∏ô‡∏≤‡∏î: {item.purchase_size || "‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤"} | ‡πÄ‡∏ú‡πá‡∏î:{" "}
                      {item.purchase_spiceLevel || "‡πÑ‡∏°‡πà‡πÄ‡∏ú‡πá‡∏î"}
                    </div>
                    {item.purchase_toppings?.length > 0 && (
                      <div className="text-sm text-gray-600">
                        ‡∏ó‡πá‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á: {item.purchase_toppings.join(", ")}
                      </div>
                    )}
                    {item.purchase_description && (
                      <div className="text-sm text-gray-600">
                        ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: {item.purchase_description}
                      </div>
                    )}
                  </div>
                  <div className="flex items-center gap-2">
                    <button
                      onClick={() => removeFromCart(item)}
                      className="bg-red-500 text-white px-2 rounded"
                    >
                      -
                    </button>
                    <button
                      onClick={() => addToCart(item)}
                      className="bg-green-500 text-white px-2 rounded"
                    >
                      +
                    </button>
                    <div className="font-bold">
                      ‡∏ø{item.quantity * item.product_price}
                    </div>
                  </div>
                </div>
              </li>
            ))}
          </ul>

          <div className="mt-6 text-right font-bold text-xl">‡∏£‡∏ß‡∏°: ‡∏ø{total}</div>

          <button
            onClick={() => {
              if (confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) {
                clearCart();
              }
            }}
            className="mt-2 w-full bg-red-600 text-white py-2 rounded hover:bg-red-300"
          >
            üóë ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          </button>

          <button
            onClick={() => {
              if (confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) {
                handleConfirm();
              }
            }}
            className="mt-4 w-full bg-green-600 text-white py-2 rounded hover:bg-green-300"
          >
            ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
          </button>

          <Link href={"/order/product"}>
            <button className="mt-4 w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-300">
              ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°
            </button>
          </Link>
        </>
      )}

      <Link href={`/order/product`} className="fixed bottom-6 left-6 z-50">
        <button className="bg-red-600 text-white px-4 py-2 rounded-full shadow-lg">
          ‡∏Å‡∏•‡∏±‡∏ö
        </button>
      </Link>
    </div>
  );
}
